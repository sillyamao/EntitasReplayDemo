//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity logicTimeEntity { get { return GetGroup(GameMatcher.LogicTime).GetSingleEntity(); } }
    public LogicTimeComponent logicTime { get { return logicTimeEntity.logicTime; } }
    public bool hasLogicTime { get { return logicTimeEntity != null; } }

    public GameEntity SetLogicTime(float newTime, float newDeltaTime, int newTargetFrameRate) {
        if (hasLogicTime) {
            throw new Entitas.EntitasException("Could not set LogicTime!\n" + this + " already has an entity with LogicTimeComponent!",
                "You should check if the context already has a logicTimeEntity before setting it or use context.ReplaceLogicTime().");
        }
        var entity = CreateEntity();
        entity.AddLogicTime(newTime, newDeltaTime, newTargetFrameRate);
        return entity;
    }

    public void ReplaceLogicTime(float newTime, float newDeltaTime, int newTargetFrameRate) {
        var entity = logicTimeEntity;
        if (entity == null) {
            entity = SetLogicTime(newTime, newDeltaTime, newTargetFrameRate);
        } else {
            entity.ReplaceLogicTime(newTime, newDeltaTime, newTargetFrameRate);
        }
    }

    public void RemoveLogicTime() {
        logicTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LogicTimeComponent logicTime { get { return (LogicTimeComponent)GetComponent(GameComponentsLookup.LogicTime); } }
    public bool hasLogicTime { get { return HasComponent(GameComponentsLookup.LogicTime); } }

    public void AddLogicTime(float newTime, float newDeltaTime, int newTargetFrameRate) {
        var index = GameComponentsLookup.LogicTime;
        var component = CreateComponent<LogicTimeComponent>(index);
        component.Time = newTime;
        component.DeltaTime = newDeltaTime;
        component.TargetFrameRate = newTargetFrameRate;
        AddComponent(index, component);
    }

    public void ReplaceLogicTime(float newTime, float newDeltaTime, int newTargetFrameRate) {
        var index = GameComponentsLookup.LogicTime;
        var component = CreateComponent<LogicTimeComponent>(index);
        component.Time = newTime;
        component.DeltaTime = newDeltaTime;
        component.TargetFrameRate = newTargetFrameRate;
        ReplaceComponent(index, component);
    }

    public void RemoveLogicTime() {
        RemoveComponent(GameComponentsLookup.LogicTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLogicTime;

    public static Entitas.IMatcher<GameEntity> LogicTime {
        get {
            if (_matcherLogicTime == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LogicTime);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLogicTime = matcher;
            }

            return _matcherLogicTime;
        }
    }
}
