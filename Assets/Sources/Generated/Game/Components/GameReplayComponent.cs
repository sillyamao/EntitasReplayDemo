//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ReplayComponent replay { get { return (ReplayComponent)GetComponent(GameComponentsLookup.Replay); } }
    public bool hasReplay { get { return HasComponent(GameComponentsLookup.Replay); } }

    public void AddReplay(int newToTick) {
        var index = GameComponentsLookup.Replay;
        var component = CreateComponent<ReplayComponent>(index);
        component.ToTick = newToTick;
        AddComponent(index, component);
    }

    public void ReplaceReplay(int newToTick) {
        var index = GameComponentsLookup.Replay;
        var component = CreateComponent<ReplayComponent>(index);
        component.ToTick = newToTick;
        ReplaceComponent(index, component);
    }

    public void RemoveReplay() {
        RemoveComponent(GameComponentsLookup.Replay);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherReplay;

    public static Entitas.IMatcher<GameEntity> Replay {
        get {
            if (_matcherReplay == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Replay);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherReplay = matcher;
            }

            return _matcherReplay;
        }
    }
}
